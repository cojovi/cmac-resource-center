You’re seeing a couple of different issues here, primarily:

ESLint errors during npm run build
Dependency version conflicts when running npm install
Missing files / 404s at runtime
Let’s break down each problem and outline how to resolve them.

1. ESLint Errors in the Build Output
Errors shown:

'CardContent' is defined but never used. @typescript-eslint/no-unused-vars
' can be escaped with &apos;, &lsquo;, &#39;, &rsquo;. react/no-unescaped-entities`
'theme' is assigned a value but never used. @typescript-eslint/no-unused-vars
What’s happening:

The ESLint @typescript-eslint/no-unused-vars rule is complaining about variables or imports you declared but never actually used in the code.
The react/no-unescaped-entities rule complains when you use certain characters like ' directly in JSX that could cause rendering issues.
How to fix:

In featured-resources.tsx, remove CardContent if you never use it:

typescript
Copy code
// If currently: import { CardContent } from '...'
// and it's never used, just remove that line or comment it out.
In hero.tsx, replace the direct ' character with a corresponding HTML entity:

jsx
Copy code
// Instead of: It's a beautiful day
// Use: It&#39;s a beautiful day 
// or: It&rsquo;s a beautiful day
In ToggleThemeButton.tsx, remove the theme variable if it’s not used:

typescript
Copy code
// If you have: const theme = something; 
// and you never use `theme`, remove that line or rename and use it.
If you prefer to ignore these rules temporarily, you could disable them in your .eslintrc.js or inline with // eslint-disable-next-line comments, but it’s best to fix them properly.

2. Dependency Version Conflicts
Error shown:

kotlin
Copy code
npm error ERESOLVE could not resolve
...
Could not resolve dependency:
peer react@"^16.8.0 || ^17.0.1 || ^18.0.0" from embla-carousel-react@8.0.0-rc17
What’s happening:

Your package.json specifies react@19.0.0 (or something similar that’s not stable yet), while embla-carousel-react@8.0.0-rc17 expects React 16, 17, or 18. React 19 is not a stable release at the time of this writing and may cause peer dependency conflicts.
How to fix:

Downgrade react and react-dom to a compatible version. For example:

bash
Copy code
npm install react@18 react-dom@18
Once you have a compatible React version, try running npm install again. The peer dependencies should resolve cleanly.

If you absolutely need react@19, you might need to switch to a version of embla-carousel-react that supports it (if it exists) or look for alternative packages. But typically, sticking to React 18 with Next.js is recommended as of now.

3. Missing Files / 404 Errors at Runtime
Errors shown:

sql
Copy code
GET /_app/immutable/chunks/Help.DyrOw1nI.js 404
GET /_app/immutable/nodes/2.DrdbkfzV.js 404
GET /_app/immutable/chunks/CodeEditor.D0qeP2wA.js 404
GET /_app/immutable/chunks/Messages.BXjY0Eq0.js 404
GET /static/splash.png 404
GET /manifest.json 404
GET /_app/version.json 404
What’s happening:

These kinds of paths (/_app/immutable/...) aren’t standard for a typical Next.js project. It looks like code or references from another framework (like SvelteKit) or a previous setup have been left in the codebase.
Check if you have any references to these paths in your code. They might be coming from:
Old code that tried to load these files.
A misconfiguration in your Next.js setup.
Imported code that expects a different environment.
How to fix:

Search your codebase for /_app/immutable references and remove or update them.
Ensure that static/splash.png, manifest.json, and version.json exist in your public/ directory if you’re referencing them. If they are not needed, remove those references.
Make sure all scripts and assets referenced in pages/_app.tsx, pages/_document.tsx, or app/layout.tsx (if using App Router) are actually available.
Summary of Steps to Resolve
Fix ESLint errors: Remove unused imports/variables, properly escape quotes.
Resolve dependency conflicts:
Downgrade React to a stable version that matches peer dependencies (React 18).
Reinstall dependencies.
Check for incorrect asset references:
Remove or fix references to /static/splash.png and /_app/immutable/... paths.
Make sure you’re not mixing files from another framework’s setup.
Ensure all referenced assets exist in the public/ directory or remove their references.